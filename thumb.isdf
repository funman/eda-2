# Thumb Instruction Set Descriptor File
#   by geohot
# part of "The Embedded Disassembler"
#
# Number Two, let's do it syntax blind
# In fact, theres so little syntax, yay!

Registers 32 R0 R1 R2 R3 R4 R5 R6 R7 R8 R9 R10 R11 R12 SP LR PC CPSR SPSR

# Special Strings
ProgramCounter `PC`
LinkRegister `LR`
StackPointer `SP`
ProgramCounterOffset 4

Z (([`CPSR`] >> 30) & 1)
C (([`CPSR`] >> 29) & 1)
N (([`CPSR`] >> 31) & 1)
V (([`CPSR`] >> 28) & 1)

# UpdateFlags is evaled in the presence of Operand
UpdateFlags ([`CPSR`] & 0x0FFFFFFF) | (({Operand}) & 0x80000000) | ((({Operand})==0) << 30)
Condition 1

DefaultChange 32 `PC` [`PC`]+2

# ADC
010000 0101 mmm ddd
  Parsed "O R, R" ADC {{d}} {{m}}
  Operand [`{{d}}`] + [`{{m}}`] + {C}
  Change 32 `{{d}}` {Operand}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# ADD(1)
0001110 iii nnn ddd
  Parsed "O R, R, #I" ADD {{d}} {{n}} {|{i}|}
  Operand [`{{n}}`] + {i}
  Change 32 `{{d}}` {Operand}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# ADD(2)
00110 ddd iiiiiiii
  Parsed "O R, #I" ADD {{d}} {|{i}|}
  Operand [`{{d}}`] + {i}
  Change 32 `{{d}}` {Operand}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# ADD(3)
0001100 mmm nnn ddd
  Parsed "O R, R, R" ADD {{d}} {{n}} {{m}}
  Operand [`{{n}}`] + [`{{m}}`]
  Change 32 `{{d}}` {Operand}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# ADD(4)
01000100 h mmmm ddd
  hd {|{h}*8 + {d}|}
  Parsed "O R, R" ADD {{hd}} {{m}}
  Operand [`{{hd}}`] + [`{{m}}`]
  Change 32 `{{hd}}` {Operand}
  Stop

# ADD(5)
10100 ddd iiiiiiii
  ri ({i}<<2)
  Parsed "O R, R, #I" ADD {{d}} PC {|{ri}|}
  Change 32 `{{d}}` ([`PC`] & 0xFFFFFFFC) + {ri}
  Stop

# ADD(6)
10101 ddd iiiiiiii
  ri ({i}<<2)
  Parsed "O R, R, #I" ADD {{d}} SP {|{ri}|}
  Change 32 `{{d}}` [`SP`] + {ri}
  Stop

# ADD(7)
101100000 iiiiiii
  ri ({i}<<2)
  Parsed "O R, #I" SP {|{ri}|}
  Change 32 `SP` [`SP`] + {ri}
  Stop

# AND
010000 0000 mmm ddd
  Parsed "O R, R" AND {{d}} {{m}}
  Operand [`{{d}}`] & [`{{m}}`]
  Change 32 `{{d}}` {Operand}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# ASR(1)
00010 iiiii mmm ddd
  Parsed "O R, R, #I" ASR {{d}} {{m}} {i}
  Operand [`{{m}}`] >>> {i}
  Change 32 `{{d}}` {Operand}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# ASR(2)
010000 0100 sss ddd
  Parsed "O R, R" ASR {{d}} {{s}}
  Operand [`{{d}}`] >>> ([`{{s}}`] & 0xFF)
  Change 32 `{{d}}` {Operand}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# B(1)
1101 0000 ********
  Condition {Z}
  ConditionString EQ
1101 0001 ********
  Condition ~{Z}
  ConditionString NE
1101 0010 ********
  Condition {C}
  ConditionString HS
1101 0011 ********
  Condition ~{C}
  ConditionString LO
1101 0100 ********
  Condition {N}
  ConditionString MI
1101 0101 ********
  Condition ~{N}
  ConditionString PL
1101 0110 ********
  Condition {V}
  ConditionString VS
1101 0111 ********
  Condition ~{V}
  ConditionString VC
1101 1000 ********
  Condition {C}&~{Z}
  ConditionString HI
1101 1001 ********
  Condition {Z}|~{C}
  ConditionString LS
1101 1010 ********
  Condition ~({N}^{V})
  ConditionString GE
1101 1011 ********
  Condition {N}^{V}
  ConditionString LT
1101 1100 ********
  Condition ~(Z)&~({N}^{V})
  ConditionString GT
1101 1101 ********
  Condition {Z}&({N}^{V})
  ConditionString LE
1101 1110 ********
  Condition 1
1101 1111 ********
  Condition 1
1101 cccc iiiiiiii
  ri (({i}<<1) | (({i}>>7)?(0xFFFFFE00))) + 4
  Parsed "OF P" B {ConditionString} {|{ri}|}
  Change 32 `PC` [`PC`] + {ri}
  Stop

# B(2)
11100 iiiiiiiiiii
  ri (({i}<<1) | (({i}>>11)?(0xFFFFF000))) + 4
  Parsed "O P" B {|{ri}|}
  Change 32 `PC` [`PC`] + {ri}
  Stop

# BIC
010000 1110 mmm ddd
  Parsed "O R, R" BIC {{d}} {{m}}
  Operand [`{{d}}`] & (~[`{{m}}`])
  Change 32 `{{d}}` {Operand}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# BKPT
10111110 iiiiiiii
  Parsed "O I" BKPT {i}
  Change 32 `PC` 0xC
  Stop

# BL, BLX(1) -- 01
111 01 iiiiiiiiiii
  ri ({i} << 1)
  Parsed "O I + R" BL {|{ri}|} LR
  Change 32 `LR` ([`PC`]+2) | 1
  Change 32 `PC` ([`LR`] + {ri}) & 0xFFFFFFFC
  Change 32 `CPSR` [`CPSR`] & 0xFFFFFFDF
  Stop

# BL, two opcodes
111 11 jjjjjjjjjjj 111 10 iiiiiiiiiii
  ri (({i} << 12) | (({i}>>11)?(0xFF800000))) + ({j} << 1) + 4
  Parsed "O P" BL {|{ri}|}
  Change 32 `LR` ([`PC`]+4)
  Change 32 `PC` ([`PC`] + {ri})
  Stop

# BL, BLX(1) -- 11
111 11 iiiiiiiiiii
  ri ({i} << 1)
  Parsed "O I + R" BL {|{ri}|} LR
  Change 32 `LR` ([`PC`]+2) | 1
  Change 32 `PC` ([`LR`] + {ri}) + 4
  Stop

# BL, BLX(1) -- 10
111 10 iiiiiiiiiii
  ri ({i} << 12) | (({i}>>11)?(0xFF800000))
  Parsed "O R, R + #I" MOV LR PC {|{ri}|}
  Change 32 `LR` [`PC`] + {ri}
  Stop

# BLX(2)
010001111 **** ***
  Change 32 `LR` ([`PC`]+2) | 1

# BLX(2) and BX
01000111* mmmm ***
  Parsed "O R" BLX {{m}}
  Change 32 `PC` ([`m`] & 0xFFFFFFFE) + 4
  Change 32 `CPSR` ([`CPSR`] & 0xFFFFFFDF) | (([`{{m}}`]&0x1) << 5)
  Stop

# CMN
010000 1011 mmm nnn
  Parsed "O R, R" CMN {{n}} {{m}}
  Operand [`{{n}}`] + [`{{m}}`]
  Change 32 `CPSR` {UpdateFlags}
  Stop

# CMP(1)
00101 nnn iiiiiiii
  Parsed "O R, #I" CMP {{n}} {|{i}|}
  Operand [`{{n}}`] + {i}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# CMP(2)
010000 1010 mmm nnn
  Parsed "O R, R" CMP {{n}} {{m}}
  Operand [`{{n}}`] - [`{{m}}`]
  Change 32 `CPSR` {UpdateFlags}
  Stop

# CMP(3)
01000101 h mmmm ddd
  hd {|{h}*8 + {d}|}
  Parsed "O R, R" CMP {{hd}} {{m}}
  Operand [`{{hd}}`] - [`{{m}}`]
  Change 32 `CPSR` {UpdateFlags}
  Stop

# CPSIE
1011 0 1 1 0 0 1 1 0 0 iii
  Parsed "OF I" CPS IE {i}
  Operand `CPSR` [`CPSR`] & (~0xE0)

# CPSID
1011 0 1 1 0 0 1 1 1 0 iii
  Parsed "OF I" CPS ID {i}
  Operand `CPSR` [`CPSR`] | 0xE0

# CPY
01000100 h mmmm ddd
  hd {|{h}*8 + {d}|}
  Parsed "O R, R" CPY {{hd}} {{m}}
  Change 32 `{{hd}}` [`{{m}}`]
  Stop

# EOR
010000 0100 mmm ddd
  Parsed "O R, R" XOR {{m}} {{s}}
  Operand [`{{d}}`] ^ [`{{m}}`]
  Change 32 `{{d}}` {Operand}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# LDMIA
# LDMIA isn't finished
11001 nnn ********
  Parsed "O R!, " LDMIA {n}
  Stop

# LDR(1)
01101 iiiii nnn ddd
  ri {i} << 2
  Parsed "O R, [R, #I]" LDR {{d}} {{n}} {|{ri}|}
  Change 32 `{{d}}` [[`{{n}}`] + {ri}]
  Stop

# LDR(2)
0101100 mmm nnn ddd
  Parsed "O R, [R, R]" LDR {{d}} {{n}} {{m}}
  Change 32 `{{d}}` [[`{{n}}`] + [`{{m}}`]]
  Stop

# LDR(3) -- PC relative
01001 ddd iiiiiiii
  Source [([`PC`] & 0xFFFFFFFC) + ({i} << 2)]
  Parsed "O R, =I" LDR {{d}} {|Source|}
  Change 32 `{{d}}` {Source}
  Stop

# LDR(4) -- from stack
01001 ddd iiiiiiii
  ri ({i} << 2)
  Parsed "O R, [R, #I]" LDR {{d}} SP {|{ri}|}
  Change 32 `{{d}}` [[`SP`] + {ri}]
  Stop

# LDRB(1)
01111 iiiii nnn ddd
  Parsed "O R, [R, #I]" LDRB {{d}} {{n}} {|{i}|}
  Change 8 `{{d}}` [[`{{n}}`] + {i}]
  Stop

# LDRB(2)
0101110 mmm nnn ddd
  Parsed "O R, [R, R]" LDRB {{d}} {{n}} {{m}}
  Change 8 `{{d}}` [[`{{n}}`] + [`{{m}}`]]
  Stop

# LDRH(1)
10001 iiiii nnn ddd
  ri ({i} << 1)
  Parsed "O R, [R, #I]" LDRH {{d}} {{n}} {|{ri}|}
  Change 16 `{{d}}` [[`{{n}}`] + {ri}]
  Stop

# LDRH(2)
0101101 mmm nnn ddd
  Parsed "O R, [R, R]" LDRH {{d}} {{n}} {{m}}
  Change 16 `{{d}}` [[`{{n}}`] + [`{{m}}`]]
  Stop

# LDRSB
0101011 mmm nnn ddd
  Parsed "O R, [R, R]" LDRSH {{d}} {{n}} {{m}}
  Operand ([[`{{n}}`] + [`{{m}}`]]) & 0xFF
  Change 32 `{{d}}` {Operand} | ((({Operand})>>7)?{0xFFFFFF00))
  Stop

# LDRSH
0101011 mmm nnn ddd
  Parsed "O R, [R, R]" LDRSH {{d}} {{n}} {{m}}
  Operand ([[`{{n}}`] + [`{{m}}`]]) & 0xFFFF
  Change 32 `{{d}}` {Operand} | ((({Operand})>>15)?{0xFFFF0000))
  Stop

# LSL(1)
00000 iiiii mmm ddd
  Parsed "O R, R, #I" LSL {{d}} {{m}} {i}
  Operand [`{{m}}`] << {i}
  Change 32 `{{d}}` {Operand}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# LSL(2)
010000 0010 sss ddd
  Parsed "O R, R" LSL {{d}} {{s}}
  Operand [`{{d}}`] << ([`{{s}}`] & 0xFF)
  Change 32 `{{d}}` {Operand}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# LSR(1)
00001 iiiii mmm ddd
  Parsed "O R, R, #I" LSR {{d}} {{m}} {i}
  Operand [`{{m}}`] >> {i}
  Change 32 `{{d}}` {Operand}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# LSR(2)
010000 0011 sss ddd
  Parsed "O R, R" LSR {{d}} {{s}}
  Operand [`{{d}}`] >> ([`{{s}}`] & 0xFF)
  Change 32 `{{d}}` {Operand}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# MOV(1)
00100 ddd iiiiiiii
  Parsed "O R, #I" MOV {{d}} {|{i}|}
  Operand {i}
  Change 32 `{{d}}` {Operand}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# MOV(2)
0001110 000 nnn ddd
  Parsed "O R, R" MOV {{d}} {{n}}
  Operand [`{{n}}`]
  Change 32 `{{d}}` {Operand}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# MOV(3)
01000110 h mmmm ddd
  hd {|{h}*8 + {d}|}
  Parsed "O R, R" MOV {{hd}} {{m}}
  Operand [`{{m}}`]
  Change 32 `{{hd}}` {Operand}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# MUL
010000 1101 mmm ddd
  Parsed "O R, R" MUL {{d}} {{m}}
  Operand [`{{d}}`] * [`{{m}}`]
  Change 32 `{{d}}` {Operand}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# MVN
010000 1101 mmm ddd
  Parsed "O R, R" MVN {{d}} {{m}}
  Operand (~[`{{m}}`])
  Change 32 `{{d}}` {Operand}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# NEG
010000 1001 mmm ddd
  Parsed "O R, R" MVN {{d}} {{m}}
  Operand (0 - [`{{m}}`])
  Change 32 `{{d}}` {Operand}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# ORR
010000 1100 mmm ddd
  Parsed "O R, R" ORR {{d}} {{m}}
  Operand [`{{d}}`] | [`{{m}}`]
  Change 32 `{{d}}` {Operand}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# POP init
1011110 * ********
  Writeback [`SP`]
  Parsed "O " POP
# POP R0
1011110 * *******1
  Parsed "%R " R0
  Writeback+ +4
  Change 32 `R0` [{Writeback}-4]
# POP R1
1011110 * ******1*
  Parsed "%R " R1
  Writeback+ +4
  Change 32 `R1` [{Writeback}-4]
# POP R2
1011110 * *****1**
  Parsed "%R " R2
  Writeback+ +4
  Change 32 `R2` [{Writeback}-4]
# POP R3
1011110 * ****1***
  Parsed "%R " R3
  Writeback+ +4
  Change 32 `R3` [{Writeback}-4]
# POP R4
1011110 * ***1****
  Parsed "%R " R4
  Writeback+ +4
  Change 32 `R4` [{Writeback}-4]
# POP R5
1011110 * **1*****
  Parsed "%R " R5
  Writeback+ +4
  Change 32 `R5` [{Writeback}-4]
# POP R6
1011110 * *1******
  Parsed "%R " R6
  Writeback+ +4
  Change 32 `R6` [{Writeback}-4]
# POP R7
1011110 * 1*******
  Parsed "%R " R7
  Writeback+ +4
  Change 32 `R7` [{Writeback}-4]
# POP PC
1011110 1 ********
  Parsed "%R " PC
  Writeback+ +4
  Change 32 `PC` [{Writeback}-4] & 0xFFFFFFFE
# POP stop
1011110 * ********
  Change 32 `SP` {Writeback}
  Stop

# PUSH init
1011010 * ********
  Writeback [`SP`]
  Parsed "O " PUSH
# PUSH LR
1011010 1 ********
  Parsed "%R " LR
  Writeback+ -4
  Change 32 {Writeback} [`LR`]
# PUSH R7
1011010 * 1*******
  Parsed "%R " R7
  Writeback+ -4
  Change 32 {Writeback}-4 [`R7`]
# PUSH R6
1011010 * *1******
  Parsed "%R " R6
  Writeback+ -4
  Change 32 {Writeback} [`R6`]
# PUSH R5
1011010 * **1*****
  Parsed "%R " R5
  Writeback+ -4
  Change 32 {Writeback} [`R5`]
# PUSH R4
1011010 * ***1****
  Parsed "%R " R4
  Writeback+ -4
  Change 32 {Writeback} [`R4`]
# PUSH R3
1011010 * ****1***
  Parsed "%R " R3
  Writeback+ -4
  Change 32 {Writeback} [`R3`]
# PUSH R2
1011010 * *****1**
  Parsed "%R " R2
  Writeback+ -4
  Change 32 {Writeback} [`R2`]
# PUSH R1
1011010 * ******1*
  Parsed "%R " R1
  Writeback+ -4
  Change 32 {Writeback} [`R1`]
# PUSH R0
1011010 * *******1
  Parsed "%R " R0
  Writeback+ -4
  Change 32 {Writeback} [`R0`]
# PUSH stop
1011010 * ********
  Change 32 `SP` {Writeback}
  Stop

# REV
1011 1010 0 0 nnn ddd
  Parsed "O R, R" REV {{d}} {{n}}
  r [`{{n}}`]
  Change 32 `{{d}}` (({r} >> 24) & 0xFF) | (({r} >> 8) & 0xFF00) | (({r} << 8) & 0xFF0000) | (({r} << 24) & 0xFF000000)
  Stop

# REV16
1011 1010 0 1 nnn ddd
  Parsed "O R, R" REV16 {{d}} {{n}}
  r [`{{n}}`]
  Change 32 `{{d}}` (({r} >> 8) & 0xFF) | (({r} << 8) & 0xFF00) | (({r} >> 8) & 0xFF0000) | (({r} << 8) & 0xFF000000)
  Stop

# REVSH
1011 1010 1 1 nnn ddd
  Parsed "O R, R" REV16 {{d}} {{n}}
  r [`{{n}}`]
  Change 32 `{{d}}` ((({r} >> 8) & 0xFF) | (({r} << 8) & 0xFF00))) | (({r}>>7)?(0xFFFF0000))

# ROR
010000 0111 sss ddd
  Parsed "O R, R" ROR {{d}} {{s}}
  Operand [`{{d}}`] >/> ([`{{s}}`] & 0xFF)
  Change 32 `{{d}}` {Operand}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# SBC
010000 0101 mmm ddd
  Parsed "O R, R" SBC {{d}} {{m}}
  Operand [`{{d}}`] - [`{{m}}`] - {C}
  Change 32 `{{d}}` {Operand}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# SETEND
1011 01100101 e ***
  Parsed "O I" SETEND {e}
  Change 32 `CPSR` ([`CPSR`] & 0xFFFFFEFF) | ({e} << 9)
  Stop

# STMIA
# STMIA isn't finished
11000 nnn ********
  Parsed "O R!, " STMIA {n}
  Stop

# STR(1)
01100 iiiii nnn ddd
  ri ({i} << 2)
  Parsed "O R, [R, #I]" STR {{d}} {{n}} {|{ri}|}
  Change 32 [`{{n}}`]+{ri} [`{{d}}`]
  Stop

# STR(2)
0101000 mmm nnn ddd
  Parsed "O R, [R, R]" STR {{d}} {{n}} {{m}}
  Change 32 [`{{n}}`]+[`{{m}}`] [`{{d}}`]
  Stop

# STR(3) -- to stack
10010 ddd iiiiiiii
  ri ({i} << 2)
  Parsed "O R, [R, #I]" STR {{d}} SP {|{ri}|}
  Change 32 [`SP`]+{ri} [`{{d}}`]
  Stop

# STRB(1)
01110 iiiii nnn ddd
  Parsed "O R, [R, #I]" STRB {{d}} {{n}} {|{i}|}
  Change 8 [`{{n}}`] + {i} [`{{d}}`]
  Stop

# STRB(2)
0101010 mmm nnn ddd
  Parsed "O R, [R, R]" STRB {{d}} {{n}} {{m}}
  Change 8 [`{{n}}`]+[`{{m}}`] [`{{d}}`]
  Stop

# STRH(1)
10000 iiiii nnn ddd
  ri ({i} << 1)
  Parsed "O R, [R, #I]" STRH {{d}} {{n}} {|{ri}|}
  Change 16 [`{{n}}`]+{ri} [`{{d}}`]
  Stop

# STRH(2)
0101001 mmm nnn ddd
  Parsed "O R, [R, R]" STRH {{d}} {{n}} {{m}}
  Change 16 [`{{n}}`]+[`{{m}}`] [`{{d}}`]
  Stop

# SUB(1)
0001111 iii nnn ddd
  Parsed "O R, R, #I" SUB {{d}} {{n}} {|{i}|}
  Operand [`{{n}}`] - {i}
  Change 32 `{{d}}` {Operand}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# SUB(2)
00111 ddd iiiiiiii
  Parsed "O R, #I" SUB {{d}} {|{i}|}
  Operand [`{{d}}`] - {i}
  Change 32 `{{d}}` {Operand}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# SUB(3)
0001101 mmm nnn ddd
  Parsed "O R, R, R" SUB {{d}} {{n}} {{m}}
  Operand [`{{n}}`] - [`{{m}}`]
  Change 32 `{{d}}` {Operand}
  Change 32 `CPSR` {UpdateFlags}
  Stop

# SUB(4)
101100001 iiiiiii
  ri ({i}<<2)
  Parsed "O R, #I" SUB SP {|{ri}|}
  Change 32 `SP` [`SP`] - {ri}
  Stop

# SWI
11011111 iiiiiiii
  Parsed "O I" SWI {i}
  Change 32 `PC` 0x8
  Stop

# SXTB
1011 0010 01 mmm ddd
  Parsed "O R, R" SXTB {{d}} {{m}}
  Change 32 `{{d}}` ([`{{m}}`]&0xFF) | (([`{{m}}`]>>7)?0xFFFFFF00)

# SXTH
1011 0010 00 mmm ddd
  Parsed "O R, R" SXTH {{d}} {{m}}
  Change 32 `{{d}}` ([`{{m}}`]&0xFFFF) | (([`{{m}}`]>>15)?0xFFFF0000)

# TST
010000 1000 mmm nnn
  Parsed "O R, R" TST {{n}} {{m}}
  Operand [`{{n}}`] & [`{{m}}`]
  Change 32 `CPSR` {UpdateFlags}
  Stop

# UXTB
1011 0010 11 mmm ddd
  Parsed "O R, R" UXTB {{d}} {{m}}
  Change 32 `{{d}}` ([`{{m}}`]&0xFF)

# UXTH
1011 0010 10 mmm ddd
  Parsed "O R, R" UXTH {{d}} {{m}}
  Change 32 `{{d}}` ([`{{m}}`]&0xFFFF)
